---
title: "ProLint2: Analysis of lipid-protein interactions"
format: html
---

<hr>
In case of issues, please contact [daniel.ramirezecheme@ucalgary.ca](mailto: daniel.ramirezecheme@ucalgary.ca) or [tieleman@ucalgary.ca](mailto: tieleman@ucalgary.ca).
<hr>

### Summary
- [`Introduction`](#introduction)
- [`Recommended installation`](#recommended-installation)
- [`ProLint2 Workflow (Universe > Contacts > Metrics > Plotters)`](#prolint2-workflow)
- [`Creating a Universe and analyzing system composition`](#creating-a-universe-and-analyzing-system-composition)
- [`Contact-based metrics`](#contact-based-metrics)
- [`Visualization`](#visualization)
- [`Advanced applications`](#advanced-applications)
    - [`Specific lipid-protein interactions`](#specific-lipid-protein-interactions)
    - [`Identifying coordination areas`](#identifying-coordination-areas)
- [`Conclusions`](#conclusions)
- [`Tools and scripts used in this tutorial`](#tools-and-scripts-used-in-this-tutorial)
- [`References`](#references)

### Introduction
<hr>
`ProLint2` is an open-source Python library for the automated analysis and visualization of lipid-protein interactions in molecular dynamics (MD) simulations of multicomponent membrane systems at atomistic or CG resolutions. It constitutes an update to the original ProLintpy library <sup>[[1]](#references)</sup> that significantly improves computational efficiency and versatility <sup>[[2]](#references)</sup>.

For many years, proteins were the primary focus in studies of biological membranes, with lipids largely regarded as mere solvents for hydrophobic proteins. However, in recent years, the complexity of the lipid environment has gained recognition. Lipids and proteins are intricately connected. The role of lipids in membrane protein functions can be described as (i) specific, when lipids directly bind to the protein surface, affecting the protein's activity and/or stability, (ii) non-specific, when the physical properties of membranes, such as surface tension, thickness, curvature, and fluidity, influence protein function, or (iii) a combination of both. Selecting an accurate membrane model is crucial for drawing biologically relevant conclusions about the lipid-protein interplay in the system of interest.

This tutorial will focus on the use of ProLint2 for the analysis and visualization of lipid-protein interactions in a Martini simulation of the G-protein-gated inwardly rectifying potassium channel (GIRK). The system features a single GIRK copy within a lipid model composed of (POPE:1|POPS:1|CHOL:1), which mimics the inner leaflet of neuronal and cardiac cell membranes, where GIRK channels are physiologically active. Te purposes of these analyses is to highlight the capabilities of ProLint2 to analyze lipid-protein interactions, providing you with the basis for their application to any other lipid-protein MD system.

### Recommended Installation
<hr>

``` bash
conda create -n prolint2 python=3.10
conda activate prolint2
python -m pip install prolint2
```

::: callout-note
`ProLint2` relies on `MDAnalysis` to read input data files, which makes it compatible with all the most popular MD engines, including GROMACS, CHARMM, NAMD, LAMMPS, and OPENMM, at both coarse-grained and atomistic resolutions.
:::

### ProLint2 Workflow

ProLint simplifies the analysis of lipid-protein interactions by breaking it
down into four sequential steps, which aligns with the four main components of the library:

![](fig1.png)

#### <strong>• Universe</strong>

Once you load your trajectory files with `ProLint2` it will automatically creates a modified `MDAnalysis` Universe that keeps all the functionalities of any `MDAnalysis` Universe, but adds an extra set of methods and attributes that are specific for the analysis of a membrane protein systems. These are based on the automatic categorization of residues into two essential components (database and query), as shown below:

![](fig2.png)

::: callout-note
This automation eliminates the need for manual removal of irrelevant residues, including water or ions.
:::

#### <strong>• Contacts</strong>

The next step in the sequence involves the creation of the `ProLint2` Contacts object, which keeps track of the interactions between all the lipid and protein residues in the system. `ProLint2` uses a distance-based approach to define contacts, which means that for every frame the algorithm checks whether a lipid molecule and a protein residue interact by verifying whether at least one atom from each group is within a defined distance cutoff. The default cutoff in `ProLint2` is 7 Angstroms, which excludes weaker, less relevant interactions while capturing strong and meaningful ones. However, this parameter can be customized to meet any specific requirement. This step is the most time-consuming, and the total processing time will vary depending on the size of the system and the number of frames in the trajectory. 

#### <strong>• Metrics</strong>

`ProLint2` Metrics provides a tool to explore lipid-protein interactions at the residue-lipid type level of detail, which is not explicitly available in the Contacts objects. Default metrics such as SumMetric, MaxMetric, and MeanMetric provide insights into the strength and duration of interactions with different lipid types in the system. Additionally, users can create custom metrics to mold the analysis to their specific requirements.

#### <strong>• Plotters</strong>

Finally, `ProLint2`’s Plotters provide a systematic way to visually reveal significant interactions
within the system. Identifying relevant lipid types and metrics using exploratory Plotters is
recommended as the first step, followed by a detailed examination of specific interactions. This
approach optimizes the analysis workflow, and ensures a thorough exploration of the local lipid environment around proteins.

### Creating a Universe and analyzing system composition
<hr>

We will start by creating a ProLint2 `Universe` using one of the sample dataset included in the library:

``` python
from prolint2 import Universe
from prolint2.sampledata import GIRKDataSample

GIRK = GIRKDataSample()

pl_u = Universe(GIRK.coordinates, GIRK.trajectory)
```
This sample data consist of the last 5 us of a 45-us-long Martini simulation of the GIRK system described in the [introduction](#introduction). For purposes of keeping the dataset light enough for the tutorial, snapshots were saved every 4 nanoseconds so that we had a total of only 1250 frames in our trajectory:

``` python
print(f"Trajectory data starting at {pl_u.trajectory[0].time/1000000:.2f } us and ending at {pl_u.trajectory[-1].time/1000000:.2f } us, sampled every {pl_u.trajectory.dt/1000:.2f } ns")
```

When the system was loaded, `Prolint2` automatically identified the protein and lipid components in the system, which can be accessed as:

``` python
print(f"Query group (Proteins) with {pl_u.query.n_atoms} atoms")
print(f"Database group (Lipids) with {pl_u.database.n_atoms} atoms")
```

From these groups we can explore the system composition with some basic functionalities:

``` python
print(f"Number of protein residues: {pl_u.query.n_residues}")
print(f"Number of lipid residues: {pl_u.database.n_residues}")


#### Load the data to prolintpy and define the protein and lipid topology
<hr>


#### Extracting information from the input system
<hr>


#### Why prolintpy is easy to scale-up
<hr>


### Contact-based metrics
<hr>


#### Build a prolintpy.ComputeContacts object
<hr>


#### Customizability
<hr>


#### Helper functions
<hr>


#### Build a pandas DataFrame
<hr>


### Visualization
<hr>



#### Visualization
<hr>



#### Contact Projection
<hr>



### Advanced applications
<hr>

#### Specific lipid-protein interactions
<hr>


#### Identifying coordination areas
<hr>


### Conclusions
<hr>


### Tools and scripts used in this tutorial
<hr>

The source code is available here: [https://github.com/ProLint/prolint2](https://github.com/ProLint/prolint2). The documentation is available here: [https://prolint2.readthedocs.io/en/latest/](https://prolint2.readthedocs.io/en/latest/).

### References
<hr>

[1] Besian I Sejdiu, D Peter Tieleman, ProLint: a web-based framework for the automated data analysis and visualization of lipid–protein interactions, Nucleic Acids Research, Volume 49, Issue W1, 2 July 2021, Pages W544–W550, https://doi.org/10.1093/nar/gkab409

[2] Ramirez-Echemendia, Daniel P., et al. “ProLint v. 2: An Optimized Tool for the Analysis and Visualization of Lipid-Protein Interactions.” Biophysical Journal, vol. 123, no. 3, 2024, p. 372a.

