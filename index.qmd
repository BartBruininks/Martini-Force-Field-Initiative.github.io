---
pagetitle: "Martini Force Field Initiative"
page-layout: custom
section-divs: false
toc: false
css: home.css
editor: source
execute:
  echo: false
description: | 
  A General Purpose Coarse-Grained Force Field.
hide-description: true
resources: 
  - images/martini.gif
  - images/home.jpeg
  - images/cell1.jpg
  - images/Genome.png
  - images/cell2.png
  - images/ribosomes.png
  - images/peptide.png
  - images/membrane.png
  - images/martini_glass.jpeg
  - images/protein.gif
  - apple-touch-icon.png
  - CNAME
---

```{=HTML}
<head>
  <style>
    :root {
      --primary-color: #4B2E4C; /* Muted, deep eggplant */
      --secondary-color: #A89CB0; /* Muted lavender/gray accent */
      --accent-color: #7A5C85; /* Muted eggplant accent */
      --text-color: #232129; /* Neutral, dark gray for high contrast */
      --light-bg: #f8f9fa;
      --white: #fff;
      --gradient-1: linear-gradient(135deg, #7A5C85, #4B2E4C);
      --gradient-2: linear-gradient(135deg, #4B2E4C, #A89CB0);
      --shadow-sm: 0 2px 4px rgba(0,0,0,0.1);
      --shadow-md: 0 4px 6px rgba(0,0,0,0.1);
      --shadow-lg: 0 10px 15px rgba(0,0,0,0.1);
      --card-height: calc(80vh - 8rem);
      --card-min-height: 420px;
      --card-max-height: 800px;
    }

    /* Base hero section override - removed banner so adjust height calculation */
    .hero {
      height: calc(100vh - 56px) !important;
      min-height: calc(100vh - 56px) !important;
    }

    /* Enhanced Height-Based Media Queries for Display Size Optimization */
    
    /* Very small height devices (landscape phones, small tablets in landscape) */
    @media (max-height: 500px) {
      .hero {
        height: calc(100vh - 56px) !important;
        min-height: 350px !important;
        padding: 0.5rem !important;
      }
      
      .hero-content {
        padding: 1rem !important;
        margin-top: 1rem !important;
        backdrop-filter: blur(5px) !important;
      }
      
      .hero-title {
        font-size: clamp(1.8rem, 4vw, 2.5rem) !important;
        margin-bottom: 0.8rem !important;
      }
      
      .hero-subtitle {
        font-size: clamp(0.9rem, 2vw, 1.1rem) !important;
        margin-bottom: 1rem !important;
      }
      
      .hero-buttons {
        gap: 0.5rem !important;
      }
      
      .btn {
        padding: 0.5rem 1.2rem !important;
        font-size: 0.9rem !important;
      }
      
      .hero-scroll-indicator {
        display: none !important;
      }
      
      .news-section, .about-section, .showcase-section {
        padding: 1rem 0.5rem !important;
      }
      
      .section-title {
        font-size: clamp(1.4rem, 3.5vw, 1.8rem) !important;
        padding-bottom: 1rem !important;
      }
      
      .about-content {
        padding: 1rem !important;
        gap: 1.5rem !important;
      }
      
      .showcase-slider {
        height: 300px !important;
      }
    }

    /* Small height devices (small laptops, tablets in portrait) */
    @media (min-height: 501px) and (max-height: 700px) {
      .hero {
        height: calc(100vh - 56px);
        min-height: 450px;
      }
      
      .hero-content {
        margin-top: 2rem;
        padding: 1.5rem;
      }
      
      .about-section {
        padding: 1.5rem !important;
      }
      
      .about-content {
        padding: 1.5rem !important;
      }
      
      .showcase-section {
        padding: 1rem !important;
      }
      
      .showcase-slider {
        height: clamp(400px, 45vh, 550px) !important;
      }
      
      .news-section {
        padding: 1.5rem !important;
      }
    }

    /* Medium height devices (standard laptops, large tablets) */
    @media (min-height: 701px) and (max-height: 1000px) {
      .hero {
        height: calc(100vh - 56px);
        min-height: 550px;
      }
      
      .hero-content {
        margin-top: 3rem;
        padding: 2rem;
      }
      
      .news-section {
        padding: 2rem 1.5rem;
      }
      
      .about-section {
        padding: 3rem 2rem;
      }
      
      .about-content {
        padding: 2rem;
      }
      
      .showcase-section {
        padding: 2rem;
      }
      
      .showcase-slider {
        height: clamp(500px, 50vh, 650px);
      }
    }

    /* Large height devices (large monitors, high-resolution displays) */
    @media (min-height: 1001px) {
      .hero {
        height: calc(100vh - 56px);
        min-height: 700px;
      }
      
      .hero-content {
        margin-top: 4rem;
        padding: 3rem;
      }
      
      .hero-title {
        font-size: clamp(3rem, 5vw, 4.5rem);
        margin-bottom: 2.5rem;
      }
      
      .hero-subtitle {
        font-size: clamp(1.4rem, 2.5vw, 1.8rem);
        margin-bottom: 2.5rem;
      }
      
      .news-section {
        padding: 4rem 2rem;
      }
      
      .about-section {
        padding: 5rem 2rem;
      }
      
      .about-content {
        padding: 3rem;
        gap: 4rem;
      }
      
      .showcase-section {
        padding: 4rem 2rem;
      }
      
      .showcase-slider {
        height: clamp(600px, 55vh, 800px);
      }
      
      .section-title {
        font-size: clamp(2.5rem, 3vw, 3rem);
      }
      
      .about-title {
        font-size: clamp(2.2rem, 2.5vw, 2.8rem);
      }
    }

  </style>
</head>

<!-- Hero Section -->
<section class="hero">
  <div class="hero-content animate-in">
    <h1 class="hero-title">Martini Force Field Initiative</h1>
    <p class="hero-subtitle">Advancing Coarse-Grained (Bio)molecular Simulations</p>
    <div class="hero-buttons">
      <button class="btn btn-primary" onclick="scrollToElement('.news-section')">Latest Updates</button>
      <button class="btn btn-secondary" onclick="scrollToElement('.about-section')">Learn More</button>
    </div>
  </div>

  <div class="hero-scroll-indicator">
    Scroll to explore
  </div>
</section>

<!-- News Section -->
<section class="news-section" id="news">
  <div class="news-container">
    <div class="section-header" style="margin-top: 1rem;">
      <h2 class="section-title">Latest News & Updates</h2>
    </div>
    <div class="news-grid">
      <!-- News cards will be dynamically loaded here -->
    </div>
  </div>
</section>

<!-- About Section -->
<section class="about-section" id="about">
  <div class="about-container">
    <div class="about-content">
      <div class="about-text">
        <h2 class="about-title">About the Martini Force Field Initiative</h2>
        <div class="about-description">
          <p>Martini is a generic coarse-grained force field suited for molecular dynamics simulations of a broad variety of  (bio)molecular systems. The force field has been parameterized in a systematic way, combining top-down and bottom-up strategies: non-bonded interactions are mostly based on the reproduction of experimental partitioning free energies between polar and apolar phases of a large number of chemical compounds, whereas bonded interactions are typically derived from reference all-atom simulations.</p>

          <p>The model is based on a four-to-one mapping scheme, i.e. on average four heavy atoms and associated hydrogens are represented by a single interaction center. Some chemical groups, such as present in ring-like compounds, are defined with higher resolution. In order to keep the model simple, only five main types of interaction sites are defined: polar, non-polar, apolar, charged, and halogen. Each particle type has a number of subtypes, which allows for an accurate representation of the chemical nature of the underlying atomistic representation.</p>

          <p>Currently, topologies are available for almost all biomolecules, including a large lipidome database, both structured and disordered proteins, nucleotides, saccharides, as well as a variety of metabolites and drug-like molecules. In addition, a collection of polymer and nanoparticle models is available for material science applications.</p>

          <p>Within the Martini Force Field Initiative, a dedicated team of developers aims to further optimize these models, and to extend the diverse set of auxiliary tools available to facilitate system building, analysis, and multi-scale strategies.</p>
        </div>
      </div>
      <div class="about-papers">
        <h3 class="papers-title">Key Publications</h3>
        <div class="papers-list">
          <a href="https://wires.onlinelibrary.wiley.com/doi/10.1002/wcms.1620" class="paper-item">
            <span class="paper-year">2022</span>
            <div class="paper-content">
              <h4>Two decades of Martini: Better beads, broader scope</h4>
              <p>WIREs Computational Molecular Science</p>
            </div>
          </a>
          <a href="https://www.nature.com/articles/s41592-021-01098-3" class="paper-item">
            <span class="paper-year">2021</span>
            <div class="paper-content">
              <h4>Martini 3: A General Purpose Force Field for Coarse-Grained Molecular Dynamics</h4>
              <p>Nature Methods</p>
            </div>
          </a>
          <a href="#" class="paper-item">
            <span class="paper-year">2016</span>
            <div class="paper-content">
              <h4>MARTINI straight: Boosting performance using a shorter cutoff and GPUs</h4>
              <p>Computer Physics Communications</p>
            </div>
          </a>
          <a href="https://pubs.acs.org/doi/10.1021/jp071097f" class="paper-item">
            <span class="paper-year">2007</span>
            <div class="paper-content">
              <h4>The Martini Force Field: Coarse Grained Model for Biomolecular Simulations</h4>
              <p>Journal of Physical Chemistry B</p>
            </div>
          </a>
          
          
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Showcase Section -->
<section class="showcase-section" id="showcase">
  <div class="section-header">
    <h2 class="section-title">Martini Gallery</h2>
  </div>
  <div class="showcase-container">
    <div class="showcase-slider">
      <div class="showcase-slide active">
        <!-- Images will be loaded dynamically -->
      </div>
      <div class="showcase-slide">
        <!-- Images will be loaded dynamically -->
      </div>
    </div>
    <div class="showcase-nav">
      <div class="showcase-dot active" onclick="currentSlide(0)"></div>
      <div class="showcase-dot" onclick="currentSlide(1)"></div>
    </div>
  </div>
</section>

<script src="js/news-loader.js"></script>

<script>
  // Easter Egg Functions
  function createFloatingMartini() {
    // Create the easter egg container
    const easterEgg = document.createElement('div');
    easterEgg.id = 'martini-easter-egg';
    
    easterEgg.style.cssText = `
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(0.8);
      width: 400px;
      height: 200px;
      z-index: 9999;
      pointer-events: none;
      opacity: 0;
      transition: opacity 1s ease-in-out, transform 1s ease-in-out;
      border-radius: 20px;
      box-shadow: 0 20px 60px rgba(0,0,0,0.4), 0 0 40px rgba(255,255,255,0.3);
      background: linear-gradient(135deg, rgba(255,255,255,0.15) 0%, rgba(255,255,255,0.08) 100%);
      backdrop-filter: blur(10px);
      border: 2px solid rgba(255,255,255,0.2);
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 20px;
    `;

    // Create the martini image
    const martiniImg = document.createElement('img');
    martiniImg.src = 'images/martini.gif';
    martiniImg.alt = 'Cheers! 🍸';
    martiniImg.style.cssText = `
      width: 120px;
      height: 120px;
      object-fit: contain;
      filter: drop-shadow(0 8px 16px rgba(0,0,0,0.5)) brightness(1.2) contrast(1.2);
      border-radius: 20px;
    `;

    // Create a text element
    const textElement = document.createElement('div');
    textElement.innerHTML = '<h2 style="color: white; margin: 0; font-size: 2rem; text-shadow: 0 4px 8px rgba(0,0,0,0.6); font-family: sans-serif;">🍸 Cheers! 🍸</h2><p style="color: rgba(255,255,255,0.9); margin: 10px 0 0 0; font-size: 1.1rem; text-shadow: 0 2px 4px rgba(0,0,0,0.5); font-family: sans-serif;">You found the rare Martini easter egg!</p>';

    // Add error handling for image loading
    martiniImg.onerror = function() {
      // Show large emoji if image fails to load
      martiniImg.style.display = 'none';
      const emojiDiv = document.createElement('div');
      emojiDiv.style.cssText = 'font-size: 120px; filter: drop-shadow(0 4px 8px rgba(0,0,0,0.5));';
      emojiDiv.textContent = '🍸';
      easterEgg.insertBefore(emojiDiv, textElement);
    };
    
    easterEgg.appendChild(martiniImg);
    easterEgg.appendChild(textElement);
    document.body.appendChild(easterEgg);
    
    // Animate in
    setTimeout(() => {
      easterEgg.style.opacity = '1';
      easterEgg.style.transform = 'translate(-50%, -50%) scale(1)';
    }, 100);
    
    // Start floating animation
    startFloatingAnimation(easterEgg);
    
    // Auto-remove after 15 seconds
    setTimeout(() => {
      if (document.body.contains(easterEgg)) {
        easterEgg.style.opacity = '0';
        easterEgg.style.transform = 'translate(-50%, -50%) scale(0.8)';
        setTimeout(() => {
          if (document.body.contains(easterEgg)) {
            easterEgg.remove();
          }
        }, 1000);
      }
    }, 15000);
  }

  function startFloatingAnimation(element) {
    if (!element || !document.body.contains(element)) {
      return;
    }
    
    let floatDirection = 1;
    let currentY = 0;
    let animationId;
    
    const floatAnimation = () => {
      if (!document.body.contains(element)) {
        cancelAnimationFrame(animationId);
        return;
      }
      
      currentY += floatDirection * 0.3;
      if (currentY > 8 || currentY < -8) {
        floatDirection *= -1;
      }
      
      try {
        element.style.transform = `translate(-50%, -50%) translateY(${currentY}px) scale(${1 + Math.sin(Date.now() * 0.002) * 0.02})`;
        animationId = requestAnimationFrame(floatAnimation);
      } catch (error) {
        cancelAnimationFrame(animationId);
      }
    };
    
    animationId = requestAnimationFrame(floatAnimation);
  }

  function initEasterEgg() {
    if (document.getElementById('martini-easter-egg')) {
      return;
    }
    
    const randomChance = Math.floor(Math.random() * 1000);
    
    // 0.1% chance (1 in 1000)
    if (randomChance < 800) {
      createFloatingMartini();
    }
  }

  // Global test functions (for development/testing)
  window.testEasterEgg = function() {
    // Remove existing one first
    const existing = document.getElementById('martini-easter-egg');
    if (existing) {
      existing.remove();
    }
    createFloatingMartini();
  };

  // Smooth Scroll with offset
  function scrollToElement(selector) {
    const element = document.querySelector(selector);
    const offset = 55; // Adjust this value based on your navbar height
    const elementPosition = element.getBoundingClientRect().top;
    const offsetPosition = elementPosition + window.pageYOffset - offset;

    window.scrollTo({
      top: offsetPosition,
      behavior: 'smooth'
    });
  }

  // Image loading and showcase functionality
  const validImageExtensions = ['.png', '.jpg', '.jpeg', '.gif'];
  const excludedImages = ['favicon.png', 'martini.gif', 'home.jpeg'];

  async function getShowcaseImages() {
    // Hardcoded list of showcase images
    let showcaseImages = [
      'cell2.png',
      'Genome.png',
      'ribosomes.png',
      'peptide.png',
      'membrane.png',
      'protein.gif',
      'martini_glass.jpeg'
    ].filter(img => !excludedImages.includes(img));

    // Shuffle the showcase images array
    for (let i = showcaseImages.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [showcaseImages[i], showcaseImages[j]] = [showcaseImages[j], showcaseImages[i]];
    }

    // Calculate number of slides needed
    const imagesPerSlide = 6;
    const totalImages = showcaseImages.length;
    const numSlides = Math.ceil(totalImages / imagesPerSlide);
    const slides = [];
    
    for (let i = 0; i < numSlides; i++) {
      // Create an array of positions (0-5)
      const positions = Array.from({length: imagesPerSlide}, (_, i) => i);
      
      // Shuffle the positions
      for (let j = positions.length - 1; j > 0; j--) {
        const k = Math.floor(Math.random() * (j + 1));
        [positions[j], positions[k]] = [positions[k], positions[j]];
      }

      // Create slide with randomized positions
      const slideImages = new Array(imagesPerSlide);
      for (let j = 0; j < imagesPerSlide; j++) {
        const imageIndex = (i * imagesPerSlide + j) % totalImages;
        const imageName = showcaseImages[imageIndex];
        const altText = imageName.split('.')[0].replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase());
        slideImages[positions[j]] = {
          src: `images/${imageName}`,
          alt: altText
        };
      }
      slides.push(slideImages);
    }
    
    return slides;
  }

  function createShowcaseItem(image) {
    const item = document.createElement('div');
    item.className = 'showcase-item';
    
    const img = document.createElement('img');
    img.src = image.src;
    img.alt = image.alt;
    img.className = 'showcase-image';
    
    const overlay = document.createElement('div');
    overlay.className = 'showcase-overlay';
    
    item.appendChild(img);
    item.appendChild(overlay);
    
    return item;
  }

  async function loadShowcaseImages() {
    const slides = document.querySelectorAll('.showcase-slide');
    const showcaseImages = await getShowcaseImages();
    
    slides.forEach((slide, slideIndex) => {
      const images = showcaseImages[slideIndex];
      images.forEach(image => {
        const item = createShowcaseItem(image);
        slide.appendChild(item);
      });
    });
  }

  // Update the showcase navigation dots based on number of slides
  async function updateShowcaseNav() {
    const slides = await getShowcaseImages();
    const navContainer = document.querySelector('.showcase-nav');
    navContainer.innerHTML = ''; // Clear existing dots
    
    for (let i = 0; i < slides.length; i++) {
      const dot = document.createElement('div');
      dot.className = `showcase-dot ${i === 0 ? 'active' : ''}`;
      dot.onclick = () => currentSlide(i);
      navContainer.appendChild(dot);
    }
  }

  // Showcase Slider functionality
  let currentSlideIndex = 0;
  let slides = document.querySelectorAll('.showcase-slide');
  let dots = document.querySelectorAll('.showcase-dot');
  let totalSlides = slides.length;

  function showSlide(index) {
    // Update slides
    slides.forEach((slide, i) => {
      if (i === index) {
        slide.classList.add('active');
        slide.style.visibility = 'visible';
      } else {
        slide.classList.remove('active');
        slide.style.visibility = 'hidden';
      }
    });

    // Update dots
    dots.forEach((dot, i) => {
      if (i === index) {
        dot.classList.add('active');
      } else {
        dot.classList.remove('active');
      }
    });

    currentSlideIndex = index;
  }

  function showNextSlide() {
    const nextSlideIndex = (currentSlideIndex + 1) % totalSlides;
    showSlide(nextSlideIndex);
  }

  function currentSlide(index) {
    showSlide(index);
  }

  // Auto-advance slides every 5 seconds
  let slideInterval = setInterval(showNextSlide, 5000);

  // Initialize first slide
  showSlide(0);

  // Update slides and dots when images are loaded
  document.addEventListener('DOMContentLoaded', async () => {
    await loadShowcaseImages();
    await updateShowcaseNav();
    
    // Re-initialize slider variables after images are loaded
    slides = document.querySelectorAll('.showcase-slide');
    dots = document.querySelectorAll('.showcase-dot');
    totalSlides = slides.length;
    
    // Reset interval
    clearInterval(slideInterval);
    slideInterval = setInterval(showNextSlide, 5000);
    
    // Show first slide
    showSlide(0);
  });

  // Intersection Observer for animations
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate-in');
      }
    });
  }, {
    threshold: 0.1
  });

  document.querySelectorAll('.animate-in').forEach((el) => observer.observe(el));

  // News Ticker Animation
  const ticker = document.querySelector('.ticker-content');
  if (ticker) {
    ticker.addEventListener('animationend', () => {
      ticker.style.animation = 'none';
      ticker.offsetHeight; // Trigger reflow
      ticker.style.animation = 'ticker 30s linear infinite';
    });
  }

  // Initialize easter egg on page load
  window.addEventListener('load', () => {
    setTimeout(() => {
      initEasterEgg();
    }, 1000);
  });
</script>
```
