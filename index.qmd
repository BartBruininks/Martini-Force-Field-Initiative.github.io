---
pagetitle: "Martini Force Field Initiative"
page-layout: custom
section-divs: false
toc: false
css: home.css
editor: source
execute:
  echo: false
description: | 
  A General Purpose Coarse-Grained Force Field.
hide-description: true
resources: 
  - images/martini.gif
  - images/home.jpeg
  - images/cell1.jpg
  - apple-touch-icon.png
  - CNAME
---

```{=HTML}
<head>
  <style>
    .container {
      width: 46vmin;
      height: 46vmin;
      perspective: 56vmin;
      position: relative;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .doodle {
      width: 35%;
      height: 35%;
      background: radial-gradient(
        blue 10%, transparent 25%
      ) 0 0 / 2% 2% no-repeat;
      border-radius: 50%;
      position: absolute;
      transform-style: preserve-3d;
      animation: scale-up 25s linear infinite;
    }

    @keyframes scale-up {
      0% {
        opacity: 0;
        transform: translate3d(0, 0, 0) rotate(0);
      }
      10% { 
        opacity: 0.5; 
      }
      95% {
        transform: translate3d(0, 0, 50vmin) rotate(360deg);
      }
      100% {
        opacity: 0;
        transform: translate3d(0, 0, 1vmin);
      }
    }
  </style>
</head>

<!--  It doesn't work with class. We need to put style  -->
<div style="flex-direction: column; width: 100%; height: 120vh; margin-top: -185px; background-size: cover; background-position: center; background-repeat: no-repeat; overflow: hidden; overflow: clip; contain: content; display: flex; align-items: center; justify-content: center; background: #f0f5f9; background-image: url('images/home.jpeg'); background-size: cover;">

<div class="background-overlay"></div>

<div class="container">
  <div class="doodle"></div>
</div>

<h1 style="font-size: 2.6em; color: #2d5c80; text-align: center;"> Welcome to the Martini Force Field Initiative </h1>
<h5 style="font-size: 1.6em; color: #2d5c80; text-align: center;"> A general purpose force field for coarse-grained molecular dynamics </h5>

<div class="buttons">
<button href="#" class="btn-21" onclick="scrollToElement('.learn-more'); return false;"> <span> Learn more </span> </button>
</div>

</div>

<!-- Second div with an ID for anchoring -->
<div style="display: flex; width: 100%; min-height: 100vh; background: #ffffff; padding: 15px;">

  <!-- Left side with text -->
  <div class="full-width" style="flex: 1; display: flex; flex-direction: column; flex-wrap: wrap; justify-content: center; padding: 20px;">
    <h2 class="learn-more" style="font-size: 2em; color: #2d5c80;">About the Martini Force Field Initiative</h2>
    <p style="font-size: 1.1em; color: #2d5c80;">
      Martini is a coarse-grained (CG) force field suited for molecular dynamics simulations of (bio)molecular systems. The force field has been parametrized in a systematic way, combining top-down and bottum-up strategies: i- non-bonded interactions are based on the reproduction of experimental partitioning free energies between polar and apolar phases of a large number of chemical compounds, whereas ii- bonded interactions are derived from reference all-atom simulations.
    </p>
    <p style="font-size: 1.1em; color: #2d5c80;">
      The model uses a four-to-one mapping scheme, i.e. on average four heavy atoms and associated hydrogens are represented by a single interaction center. In order to keep the model simple, only four main types of interaction sites are defined: polar, non-polar, apolar, and charged. Each particle type has a number of subtypes, which allow for an accurate representation of the chemical nature of the underlying atomistic representation.
    </p>
    <p style="font-size: 1.1em; color: #2d5c80;">
      Currently topologies are available for many lipids and surfactant molecules, including cholesterol, and for all amino acids and nucleotides as well as for a variety of sugars, polymers, and nanoparticles. Tools are furthermore available to build topologies for arbitrary peptides, proteins, polynucleotides, to add elastic networks, and to move between coarse-grained and atomistic representations.
    </p>
  </div>

  <!-- Right side with images -->
  <div class="image-slider-container" style="flex: 1; padding: 20px;">
    <div class="image-slider">

      <!-- Images -->
      <img src="images/cell2.png" alt="Showcase 1" class="slide active">
      <img src="images/Genome.png" alt="Showcase 2" class="slide">
      <img src="images/ribosomes.png" alt="Showcase 3" class="slide">
      <img src="images/peptide.png" alt="Showcase 4" class="slide"  style="object-fit: contain">
      <img src="images/membrane.png" alt="Showcase 5" class="slide" style="object-fit: cover">
      <img src="images/protein.gif" alt="Showcase 6" class="slide"  style="object-fit: contain">
      <!-- Add more images as needed -->

    </div>

    <!-- Navigation dots -->
    <div class="dots">
      <div class="dot active" onclick="currentSlide(0)"></div>
      <div class="dot" onclick="currentSlide(1)"></div>
      <div class="dot" onclick="currentSlide(2)"></div>
      <div class="dot" onclick="currentSlide(3)"></div>
      <div class="dot" onclick="currentSlide(4)"></div>
      <div class="dot" onclick="currentSlide(5)"></div>
      <!-- Add more dots as needed -->
    </div>
  </div>

</div>


<!-- JavaScript for automatic slideshow -->
<script src="https://cdn.jsdelivr.net/gh/LieutenantPeacock/SmoothScroll@1.2.0/src/smoothscroll.min.js" integrity="sha384-UdJHYJK9eDBy7vML0TvJGlCpvrJhCuOPGTc7tHbA+jHEgCgjWpPbmMvmd/2bzdXU" crossorigin="anonymous"></script>
<script>
  let currentSlideIndex = 0;
  const slides = document.querySelectorAll('.image-slider .slide');
  const dots = document.querySelectorAll('.dots .dot');
  const totalSlides = slides.length;

  function showSlide(index) {
    slides.forEach((slide, i) => {
      slide.classList.toggle('active', i === index);
    });
    dots.forEach((dot, i) => {
      dot.classList.toggle('active', i === index);
    });
    currentSlideIndex = index;
  }

  function showNextSlide() {
    const nextSlideIndex = (currentSlideIndex + 1) % totalSlides;
    showSlide(nextSlideIndex);
  }

  function currentSlide(index) {
    showSlide(index);
  }

  setInterval(showNextSlide, 5000);

  // Initially show the first slide
  showSlide(0);

  // Function to scroll to the second div
  function scrollToElement(selector) {
    const targetElement = document.querySelector(selector);
    smoothScroll({toElement: targetElement, duration: 1000});
  }
</script>

<script>
  const container = document.querySelector('.container');

  for (let i = 0; i < 12; i++) {
    const doodle = document.createElement('div');
    doodle.className = 'doodle';
    doodle.style.animationDelay = `${i * -5.8}s`;
    
    // Randomize background color and size
    const colors = ['pink', 'green', 'yellow'];
    const color = colors[Math.floor(Math.random() * colors.length)];
    const size = 0.9 * 2.1 + 1.8;
    doodle.style.background = `radial-gradient(${color} 10%, transparent 25%)`;
    doodle.style.backgroundSize = `${size}% ${size}%`;

    container.appendChild(doodle);
  }
</script>
```
